class GreenWay
types
-- TODO Define types here

	public Member = Device`DeviceID;
	public EntityMember = Entity`EntityID;
	public Credit = nat;
	
	


values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
	public members : map Member to Device := { |-> };
	public entities : map EntityMember to Entity := { |-> };
	public credits : map Member to Credit := { |-> };
	
operations
-- TODO Define operations here
	public GreenWay: () ==> GreenWay
		GreenWay() == 
			return self;
			
			
public AddMember : Member * Device ==> ()
AddMember(id, m) ==(

   members := members ++ { id |-> m };
   credits := credits ++ { id |-> 0 });
   
			
public AddEntity : EntityMember * Entity ==> ()
AddEntity(id, e) ==
   entities := entities ++ { id |-> e };
   
   

	    public UseService : Member * EntityMember ==> ()
UseService (m,e) ==(
		members(m).lastLocation := entities(e).location;
		credits := credits ++ { m |-> entities(e).cost + credits(m) };				
	
	)pre members(m).balance >=0;
	
	
    
 
	    
	    
	    


functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end GreenWay