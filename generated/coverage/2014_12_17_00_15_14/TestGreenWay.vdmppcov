class TestGreenWay is subclass of TestCaseUtils


	/***** USE CASE SCENARIOS ******/

operations

	public ConfigureGW: () ==> GreenWay
		ConfigureGW() == (
		dcl gw : GreenWay := new GreenWay();
		return gw;
		)
		
	post RESULT.members = {|->}
			 and RESULT.entities = {|->}
			 and RESULT.credits = {|->};
			 
			 
	public AddMemberGW: GreenWay * Device ==> ()
		AddMemberGW(gw, m) ==
		(
			gw.AddMember(m.id, m);			
			assertEqual(gw.members(m.id), m);	
			IO`println(gw);
			);	
			
	public AddEntitiesGW: GreenWay * Entity  ==> ()
		AddEntitiesGW(gw, e) ==
		(
			gw.AddEntity(e.entityID, e);			
			assertEqual(gw.entities(e.entityID), e);	
			IO`println(gw);
			);	
									
			
	public testAddMember: () ==> ()
  testAddMember() == (
  
  	dcl member: Device := new Device(1, 0);
  	dcl gw : GreenWay := ConfigureGW();
  	AddMemberGW(gw, member);  
  		  	
  );
  
  public testAddEntity: () ==> ()
  testAddEntity() == (
  
  	dcl entity: Entity := new Entity(1, 2, 20);
  	dcl gw : GreenWay := ConfigureGW();
  	AddEntitiesGW(gw, entity);  
  		  	
  );
  
  public testSeveralAditions: () ==> ()
  testSeveralAditions() == (
  	
  	dcl member: Device := new Device(1, 0);
  	dcl member1: Device := new Device(2, 0);
  	dcl member2: Device := new Device(3, 0);
  	
  	dcl entity: Entity := new Entity(1, 2, 20);
  	dcl entity1: Entity := new Entity(2, 3, 20);
  	dcl entity2: Entity := new Entity(3, 4, 20);
  	
  	dcl gw : GreenWay := ConfigureGW();
  	
  	AddEntitiesGW(gw, entity); 
  	AddEntitiesGW(gw, entity1);
  	AddEntitiesGW(gw, entity2);
  	
  	AddMemberGW(gw, member);
  	AddMemberGW(gw, member1);
  	AddMemberGW(gw, member2);
  	
  	IO`println(gw);
  		  	
  );
  
  public testAll: () ==> ()
  testAll() == (
  	testSeveralAditions();
  	)
			 
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end TestGreenWay